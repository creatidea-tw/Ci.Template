@using X.PagedList
@using X.PagedList.Mvc
@model IEnumerable<Ci.Template.Library.Models.Admin>

@{
    ViewBag.Title = "帳號管理";
}

<h2>帳號管理</h2>

<p>
    @Html.ActionLink("新增帳號", "Create", new { }, htmlAttributes: new { @class = "btn btn-primary" })
</p>
<table class="table">
    <tr>

        <th>
            @Html.DisplayNameFor(model => model.Account)
        </th>
        <th>
            @* @Html.DisplayNameFor(model => model.CreateTime)*@
        </th>
        <th></th>
    </tr>
    @if (Model.Any())
    {
        foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Account)
                </td>
                <td>

                    @foreach (var r in item.Roles.Where(x => x.IsDelete == false).OrderBy(x => x.Sort))
                    {
                        @r.Name
                        @:
                    }
                </td>
                <td>
                    <a href="@Url.Action("Edit", new { id = item.Id })" class="btn btn-info">編輯</a>
                    <a href="@Url.Action("Delete", new {id = item.Id})" class="btn btn-danger" onclick="return confirm('確認是否刪除此帳號');">刪除</a>
                </td>
            </tr>
        }
    }
    else
    {
        <tr>
            <td colspan="3" align="center">目前無資料</td>
        </tr>
    }
</table>
@Html.PagedListPager((IPagedList)Model, page => Url.Action("Index", new { page, category = ViewBag.categoryId }), PagedListRenderOptions.Classic)

@section Scripts {


}